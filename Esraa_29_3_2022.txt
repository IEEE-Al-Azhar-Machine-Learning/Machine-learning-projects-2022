###############################
from sklearn import preprocessing
obj=data.select_dtypes(include=['object'])
le=preprocessing.LabelEncoder()
for i in range(obj.shape[1]):
  obj.iloc[:,i]=le.fit_transform(obj.iloc[:,i])
nun_obj=data.select_dtypes(exclude=['object'])
data=pd.concat([obj,nun_obj],axis=1) 
###################################
#relationship
################################
c=data.corr()
##################################
#SPLIT DATA TO X,Y
#################################
x=data.iloc[:,:-1]
y=data.iloc[:,-1]
#################################
#SPLIT DATA TO TRAIN AND TEST
###############################
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,train_size=0.80)

###############################
from sklearn.ensemble import RandomForestClassifier
m=RandomForestClassifier(n_estimators=100,max_depth=10)
m.fit(x_train,y_train)
#print(m.score(x_train,y_train))
#print(m.score(x_test,y_test))
###############################

##############################
import pickle
# Make pickle file of our model
pickle.dump(m, open("model.pkl", "wb")) 

