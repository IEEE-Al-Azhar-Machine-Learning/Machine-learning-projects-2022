# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Xjp_ezGE_-54AcjRptomgikh6_TTjgd2
"""

import pandas as pd
import numpy as np
from matplotlib import pyplot as plt
import warnings
warnings.filterwarnings('ignore')
import seaborn as sns
data = pd.read_csv('/content/drive/MyDrive/hr_employee_churn_data.csv')
data

def sigmoid(x):
  return 1/(1 + np.exp(-x))
nums = np.arange(-10, 10, step = 1)
fig, ax = plt.subplots(figsize = (5,5))
ax.plot(nums, sigmoid(nums))

x = data.iloc[:,:-1]
x

y = data.iloc[:,-1]
y

x = pd.get_dummies(data, drop_first='True')
x = (x - np.min(x)) / (np.max(x)- np.min(x))

x

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.20, shuffle='True')
x_train.shape, x_test.shape, y_train.shape, y_test.shape

from sklearn.linear_model import LogisticRegression
log = LogisticRegression()
x_train = np.nan_to_num(x_train)
y_train = np.nan_to_num(y_train)
log.fit(x_train, y_train)
y_pred = log.predict(x_test)
print("logestic regression train score is : ", log.score(x_train,y_train))
print("logestic regression test score is : ", log.score(x_test,y_test))
from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_pred)
cm

from sklearn.metrics import mean_absolute_error
mean_absolute_error(y_test, y_pred)

from sklearn.metrics import f1_score
f1_score(y_test, y_pred, average = 'micro')
